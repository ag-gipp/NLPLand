name: Release
on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: ðŸ’¿ Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: ðŸ“¦ Install dependencies
        run: poetry install
      - name: ðŸ§ª Run tests
        run: |
          poetry run poe alltest

  Release:
    needs: [Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"
          persist-credentials: false
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: ðŸ’¿ Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: ðŸ“¦ Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: â¬† Update package version to git tag
        run: |
          poetry version $(git describe --tags --abbrev=0)
      - name: âž• Commit files
        run: |
          git config --local user.email "jan.philip.wahle@gmail.com"
          git config --local user.name "github-actions[bot]"
          git add pyproject.toml
          git commit -m "[release-bot] Update pyproject.toml version"
      - name: ðŸ’¨ Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ github.ref }}
      - name: ðŸ”¨ Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1.10.0
        with:
          generateReleaseNotes: true
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
